#   Licensed to the Apache Software Foundation (ASF) under one or more
#   contributor license agreements.  See the NOTICE file distributed with
#   this work for additional information regarding copyright ownership.
#   The ASF licenses this file to You under the Apache License, Version 2.0
#   (the "License"); you may not use this file except in compliance with
#   the License.  You may obtain a copy of the License at
# 
#       http://www.apache.org/licenses/LICENSE-2.0
# 
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

#Stored by I18NEdit, may be edited!
autoConnectRetry.displayName=Keep trying
autoConnectRetry.shortDescription=If true, the driver will keep trying to connect to the same server in case that the socket cannot be established.<br><br>There is maximum amount of time to keep retrying, which is 15s by default.<br><br>This can be useful to avoid some exceptions being thrown when a server is down temporarily by blocking the operations.<br><br>It also can be useful to smooth the transition to a new master (so that a new master is elected within the retry time).<br><br>Note that when using this flag\:<br>- for a replica set, the driver will trying to connect to the old master for that time, instead of failing over to the new one right away -<br> this does not prevent exception from being thrown in read/write operations on the socket, which must be handled by application.<br><br>Even if this flag is false, the driver already has mechanisms to automatically recreate broken connections and retry the read operations. <br><br>Default is false.
connectTimeout.displayName=Connection timeout
connectTimeout.shortDescription=The connection timeout in milliseconds.<br><br>It is used solely when establishing a new connection Socket.connect(java.net.SocketAddress, int)<br><br>Default is 0 and means no timeout.
connection.displayName=Server Address List
connection.shortDescription=Server Address List
connectionsPerHost.displayName=Maximum connections Per Host
connectionsPerHost.shortDescription=The maximum number of connections allowed per host for this Mongo instance.<br><br>Those connections will be kept in a pool when idle.<br><br>Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.<br><br>Default is 10.
continueOnInsertError.displayName=Continue on Error
continueOnInsertError.shortDescription=If batch inserts should continue after the first error
displayName=MongoDB Source Config (DEPRECATED)
fsync.displayName=Fsync
fsync.shortDescription=The fsync value of the global WriteConcern.<br><br>Default is false.
maxAutoConnectRetryTime.displayName=Maximum retry time
maxAutoConnectRetryTime.shortDescription=The maximum amount of time in MS to spend retrying to open connection to the same server.<br><br>Default is 0, which means to use the default 15s if autoConnectRetry is on.
maxWaitTime.displayName=Maximum wait time
maxWaitTime.shortDescription=The maximum wait time in ms that a thread may wait for a connection to become available.<br><br>Default is 120,000.
mongodb.displayName=MongoDB Connection
mongodb.shortDescription=Configure the connection
options.displayName=MongoDB Options
options.shortDescription=Various settings for the driver
safe.displayName=Safe
safe.shortDescription=If true the driver will use a WriteConcern of WriteConcern.SAFE for all operations.<br><br>If w, wtimeout, fsync or j are specified, this setting is ignored.<br><br>Default is false.
socketKeepAlive.displayName=Socket keep alive
socketKeepAlive.shortDescription=This flag controls the socket keep alive feature that keeps a connection alive through firewalls Socket.setKeepAlive(boolean)<br><br>Default is false.
socketTimeout.displayName=Socket timeout
socketTimeout.shortDescription=The socket timeout in milliseconds It is used for I/O socket read and write operations Socket.setSoTimeout(int)<br><br>Default is 0 and means no timeout. 
source.displayName=MongoDB Source
source.shortDescription=Configure the Source
threadsAllowedToBlockForConnectionMultiplier.displayName=Block Multiplier
threadsAllowedToBlockForConnectionMultiplier.shortDescription=This multiplier, multiplied with the connectionsPerHost setting, gives the maximum number of threads that may be waiting for a connection to become available from the pool.<br><br>All further threads will get an exception right away.<br><br>For example if connectionsPerHost is 10 and threadsAllowedToBlockForConnectionMultiplier is 5, then up to 50 threads can wait for a connection.<br><br>Default is 5.
waitForJournaling.displayName=Wait for Journal
waitForJournaling.shortDescription=The j value of the global WriteConcern.<br><br>Default is false.
writeConcern.displayName=Write Concern Options
writeConcern.shortDescription=Various settings for the driver
writeOperationNumberOfServers.displayName=Wait for Servers
writeOperationNumberOfServers.shortDescription=The w value of the global WriteConcern.<br><br>Default is 0.
writeOperationTimeout.displayName=Wait Timeout
writeOperationTimeout.shortDescription=The wtimeout value of the global WriteConcern.<br><br>Default is 0.
